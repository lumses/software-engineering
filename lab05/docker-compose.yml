version: "3.9"

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./user_service/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 3

  user_service:
    build:
      context: ./user_service
    container_name: user_service
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 2s
      timeout: 2s
      retries: 3

  mongo:
    image: mongo:5.0
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 2s
      timeout: 2s
      retries: 3

  post_service:
    build:
      context: ./post_service
    container_name: post_service
    ports:
      - "8001:8001"
    depends_on:
      user_service:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 5s
      retries: 1
    
  redis:
    build:
      context: ./redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 2s
      timeout: 2s
      retries: 5

volumes:
  mongo_data:
  pgdata:
